
# vim: expandtab tabstop=2 shiftwidth=2

# if this is not an interactive shell, bail immediately
[[ ! $- == *i* ]] && return

alias vi="vim -X -T xterm-256color"
alias grep="grep --color=auto"
export LESS="-F -X -R"
if uname -a | grep -q Darwin ;
then
  # Mac settings
  alias d="ls -Gx"
  alias dir="ls -Glh"
  export LSCOLORS="gxdxcxcxbxDxDxaDaDecec"
  export GREP_COLOR="07;36"
else
  # Linux settings
  alias d="ls -x --color -v"
  alias dir="ls -lh --color -v"
  export LS_COLORS="di=36:ex=31:ln=33"
  export GREP_COLORS="07;36"
fi

export ANSI_RESET="\[\033[0;0m\]"
export ANSI_BOLD="\[\033[0;1m\]"

# Standard ANSI colors
idx=0
for color in BLACK RED GREEN YELLOW BLUE MAGENTA CYAN WHITE ;
do
  export ANSI_${color}_FG="\[\033[1;$((${idx}+30))m\]"
  export ANSI_${color}_BG="\[\033[1;$((${idx}+40))m\]"
  export ANSI_BRIGHT_${color}_FG="\[\033[1;$((${idx}+90))m\]"
  export ANSI_BRIGHT_${color}_BG="\[\033[1;$((${idx}+100))m\]"
  idx=$((${idx} + 1))
done

# 256 color ANSI red scale
for i in $(seq 16 36 196) ;
do
  export ANSI_RED_${i}_FG="\[\033[38;5;${i};1m\]"
  export ANSI_RED_${i}_BG="\[\033[48;5;${i};1m\]"
done

# 256 color ANSI grayscale
for i in $(seq 232 255) ;
do
  export ANSI_GRAY_${i}_FG="\[\033[38;5;${i};1m\]"
  export ANSI_GRAY_${i}_BG="\[\033[48;5;${i};1m\]"
done

if [[ ${EUID} == 0 ]] ;
then
  export PS1="${ANSI_GRAY_253_FG}${ANSI_RED_88_BG} \w ${ANSI_RESET}${ANSI_RED_124_FG}${ANSI_RESET} "
else
  export PS1="${ANSI_GRAY_253_FG}${ANSI_GRAY_238_BG} \w ${ANSI_RESET}${ANSI_GRAY_242_FG}${ANSI_RESET} "
fi

# don't create core files
ulimit -c 0

# don't save command history between sessions
unset HISTFILE
export HISTCONTROL="ignoredups"

if [ "${TERM:0:6}" == "screen" ] ; then
  export PROMPT_COMMAND="echo -ne '\033k${HOSTNAME%%.*}\033\\'"
else
  export PROMPT_COMMAND=""
fi
export RSYNC_RSH="ssh -o permitlocalcommand=no"

# Attempt to attach to a tmux session
if [[ "${TERM:0:6}" != "screen" ]] ;
then
  if [[ $(tmux list-sessions 2> /dev/null | grep -v attached) ]] ;
  then
    # If there's only a single detached session, automatically attach to it
    if [[ "$(tmux list-sessions | grep -v attached | wc -l | xargs)" == "1" ]] ;
    then
      exec tmux attach-session -t $(tmux list-sessions | grep -v attached | cut -f 1 -d :)
    else
      echo "Select tmux session to attach to:"
      tmux list-session | grep -v attached
      read -p "Session: " TMUX_SESSION_ID
      tmux has-session -t ${TMUX_SESSION_ID} && exec tmux attach-session -t ${TMUX_SESSION_ID}
    fi
  fi
fi
